[package]
name = "ruff_linter"
version = "0.11.10"
publish = false
authors = { workspace = true }
edition = { workspace = true }
rust-version = { workspace = true }
homepage = { workspace = true }
documentation = { workspace = true }
repository = { workspace = true }
license = { workspace = true }

[lib]

[dependencies]
ruff_annotate_snippets = { workspace = true }
ruff_cache = { workspace = true }
ruff_db = { workspace = true }
ruff_diagnostics = { workspace = true, features = ["serde"] }
ruff_notebook = { workspace = true }
ruff_macros = { workspace = true }
ruff_python_ast = { workspace = true, features = ["serde", "cache"] }
ruff_python_codegen = { workspace = true }
ruff_python_index = { workspace = true }
ruff_python_literal = { workspace = true }
ruff_python_semantic = { workspace = true }
ruff_python_stdlib = { workspace = true }
ruff_python_trivia = { workspace = true }
ruff_python_parser = { workspace = true }
ruff_source_file = { workspace = true, features = ["serde"] }
ruff_text_size = { workspace = true }
ruff_linter_checkers = { workspace = true }
ruff_linter_noqa = { workspace = true }
ruff_linter_settings = { workspace = true }
ruff_linter_commons = { workspace = true }
ruff_codes = { workspace = true, features = ["clap"] }
ruff_linter_fix = { workspace = true }
ruff_linter_message = { workspace = true }
ruff_linter_directives = { workspace = true }
ruff_linter_macros = { workspace = true }


ruff_rule_airflow = { workspace = true }
ruff_rule_eradicate = { workspace = true }
ruff_rule_fastapi = { workspace = true }
ruff_rule_flake8_2020 = { workspace = true }
ruff_rule_flake8_annotations = { workspace = true }
ruff_rule_flake8_async = { workspace = true }
ruff_rule_flake8_bandit = { workspace = true }
ruff_rule_flake8_blind_except = { workspace = true }
ruff_rule_flake8_boolean_trap = { workspace = true }
ruff_rule_flake8_bugbear = { workspace = true }
ruff_rule_flake8_builtins = { workspace = true }
ruff_rule_flake8_commas = { workspace = true }
ruff_rule_flake8_comprehensions = { workspace = true }
ruff_rule_flake8_copyright = { workspace = true }
ruff_rule_flake8_datetimez = { workspace = true }
ruff_rule_flake8_debugger = { workspace = true }
ruff_rule_flake8_django = { workspace = true }
ruff_rule_flake8_errmsg = { workspace = true }
ruff_rule_flake8_executable = { workspace = true }
ruff_rule_flake8_fixme = { workspace = true }
ruff_rule_flake8_future_annotations = { workspace = true }
ruff_rule_flake8_gettext = { workspace = true }
ruff_rule_flake8_implicit_str_concat = { workspace = true }
ruff_rule_flake8_import_conventions = { workspace = true }
ruff_rule_flake8_logging = { workspace = true }
ruff_rule_flake8_logging_format = { workspace = true }
ruff_rule_flake8_no_pep420 = { workspace = true }
ruff_rule_flake8_pie = { workspace = true }
ruff_rule_flake8_print = { workspace = true }
ruff_rule_flake8_pyi = { workspace = true }
ruff_rule_flake8_pytest_style = { workspace = true }
ruff_rule_flake8_quotes = { workspace = true }
ruff_rule_flake8_raise = { workspace = true }
ruff_rule_flake8_return = { workspace = true }
ruff_rule_flake8_self = { workspace = true }
ruff_rule_flake8_simplify = { workspace = true }
ruff_rule_flake8_slots = { workspace = true }
ruff_rule_flake8_tidy_imports = { workspace = true }
ruff_rule_flake8_todos = { workspace = true }
ruff_rule_flake8_type_checking = { workspace = true }
ruff_rule_flake8_unused_arguments = { workspace = true }
ruff_rule_flake8_use_pathlib = { workspace = true }
ruff_rule_flynt = { workspace = true }
ruff_rule_isort = { workspace = true }
ruff_rule_mccabe = { workspace = true }
ruff_rule_numpy = { workspace = true }
ruff_rule_pandas_vet = { workspace = true }
ruff_rule_pep8_naming = { workspace = true }
ruff_rule_perflint = { workspace = true }
ruff_rule_pycodestyle = { workspace = true }
ruff_rule_pydoclint = { workspace = true }
ruff_rule_pydocstyle = { workspace = true }
ruff_rule_pyflakes = { workspace = true }
ruff_rule_pygrep_hooks = { workspace = true }
ruff_rule_pylint = { workspace = true }
ruff_rule_pyupgrade = { workspace = true }
ruff_rule_refurb = { workspace = true }
ruff_rule_ruff = { workspace = true }
ruff_rule_tryceratops = { workspace = true }

aho-corasick = { workspace = true }
anyhow = { workspace = true }
bitflags = { workspace = true }
clap = { workspace = true, features = ["derive", "string"], optional = true }
colored = { workspace = true }
fern = { workspace = true }
glob = { workspace = true }
globset = { workspace = true }
imperative = { workspace = true }
is-macro = { workspace = true }
is-wsl = { workspace = true }
itertools = { workspace = true }
libcst = { workspace = true }
jiff = { workspace = true }
log = { workspace = true }
memchr = { workspace = true }
natord = { workspace = true }
path-absolutize = { workspace = true, features = [
    "once_cell_cache",
    "use_unix_paths_on_wasm",
] }
pathdiff = { workspace = true }
pep440_rs = { workspace = true }
pyproject-toml = { workspace = true }
quick-junit = { workspace = true }
regex = { workspace = true }
rustc-hash = { workspace = true }
schemars = { workspace = true, optional = true }
serde = { workspace = true }
serde_json = { workspace = true }
similar = { workspace = true }
smallvec = { workspace = true }
strum = { workspace = true }
strum_macros = { workspace = true }
thiserror = { workspace = true }
toml = { workspace = true }
typed-arena = { workspace = true }
unicode-width = { workspace = true }
unicode_names2 = { workspace = true }
unicode-normalization = { workspace = true }
url = { workspace = true }

[dev-dependencies]
insta = { workspace = true, features = ["filters", "json", "redactions"] }
test-case = { workspace = true }
# Disable colored output in tests
colored = { workspace = true, features = ["no-color"] }
tempfile = { workspace = true }

[features]
default = []
schemars = ["dep:schemars", "ruff_python_ast/schemars"]
# Enables rules for internal integration tests
test-rules = []

[lints]
workspace = true
